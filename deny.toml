# https://embarkstudios.github.io/cargo-deny/index.html
[graph]
# The graph table configures how the dependency graph is constructed and thus what will be checked
# for license compliance and security advisories.

# The target field determines which targets are included in the dependency graph. By default,
# all targets are included. If you want to only check specific targets, you can specify them here.
# target = ["x86_64-unknown-linux-gnu"]

# The exclude field can be used to exclude specific dependencies from the dependency graph.
# This is useful for dependencies that are not distributed with your package but are only used
# during development or testing.
exclude = []

# The features field can be used to include or exclude specific features from the dependency graph.
# This is useful if you want to check different feature combinations.
features = []

[bans]
# Lint level for when multiple versions of the same license are detected
multiple-versions = "allow"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
highlight = "all"
# The default lint level if no other predicates are matched
allow = [
    #{ name = "some_crate", version = "*" },
]
deny = [
    # Each entry the name of a crate and a version range. If version is
    # not specified, all versions will be matched.
    #{ name = "ansi_term", version = "*" },
]
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    #{ name = "ansi_term", version = "*" },
]
# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies entirely. Use this if you have a
# crate in your dependency tree that has a lot of optional dependencies that might not all
# be needed (e.g. a proc-macro that brings in a lot of compiler dependencies).
skip-tree = [
    #{ name = "some_crate", version = "*" },
]

[licenses]
# List of explicitly allowed licenses
# https://spdx.org/licenses/
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-3-Clause",
    "Unicode-3.0",
    "0BSD",
    "Zlib",
    "BSL-1.0",
]

[advisories]
# The scope of crates to check for being unmaintained
unmaintained = "all"
# A list of advisory IDs to ignore
ignore = [
    #"RUSTSEC-0000-0000",
]

