# https://embarkstudios.github.io/cargo-deny/index.html
[graph]
# The graph table configures how the dependency graph is constructed and thus what will be checked
# for license compliance and security advisories.

# The target field determines which targets are included in the dependency graph. By default,
# all targets are included. If you want to only check specific targets, you can specify them here.
# target = ["x86_64-unknown-linux-gnu"]

# The exclude field can be used to exclude specific dependencies from the dependency graph.
# This is useful for dependencies that are not distributed with your package but are only used
# during development or testing.
exclude = []

# The features field can be used to include or exclude specific features from the dependency graph.
# This is useful if you want to check different feature combinations.
features = []

[bans]
# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
highlight = "all"
# The default lint level if no other predicates are matched
allow = [
    #{ name = "some_crate", version = "*" },
]
deny = [
    # Each entry the name of a crate and a version range. If version is
    # not specified, all versions will be matched.
    #{ name = "ansi_term", version = "*" },
]
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    #{ name = "ansi_term", version = "*" },
]
# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies entirely. Use this if you have a
# crate in your dependency tree that has a lot of optional dependencies that might not all
# be needed (e.g. a proc-macro that brings in a lot of compiler dependencies).
skip-tree = [
    #{ name = "some_crate", version = "*" },
]

[licenses]
# List of explicitly allowed licenses
# https://spdx.org/licenses/
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
    "0BSD",
    "Zlib",
    "BSL-1.0",
    "PostgreSQL",
    "OpenSSL",
    "MPL-2.0",
]
# List of explicitly disallowed licenses
# See https://spdx.org/licenses/ for list of possible licenses
deny = [
    #"Nokia",
]
# Lint level for crates which do not have a detectable license
unlicensed = "deny"
# Lint level for when no license information is available for a crate
unknown = "deny"
# Lint level for when multiple licenses are detected for a crate
multiple = "allow"
# Lint level for when a license cannot be determined for a crate
unconfidence = "warn"
# The confidence threshold for detecting a license from license text.
# The higher the value, the more closely the license text must be to the
# canonical license text of a valid SPDX license file.
confidence-threshold = 0.8
# The default lint level if no other predicates are matched
default = "deny"

[advisories]
# The lint level for security vulnerabilities
vulnerability = "deny"
# The lint level for unmaintained crates
unmaintained = "warn"
# The lint level for crates with security notices
notice = "warn"
# A list of advisory IDs to ignore
ignore = [
    #"RUSTSEC-0000-0000",
]
# Threshold for security vulnerabilities, any vulnerability with a CVSS score lower
# than this value will be ignored.
severity-threshold = "Medium"

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"
# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []
