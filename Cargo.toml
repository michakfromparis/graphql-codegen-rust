[package]
name = "graphql-rust-codegen"
version = "0.1.0"
edition = "2021"
rust-version = "1.70"
authors = ["Michel Courtine <github@michak.net>"]  # Update with your info
description = "Generate Rust ORM code from GraphQL schemas"
documentation = "https://docs.rs/graphql-rust-codegen"
homepage = "https://github.com/michakfromparis/graphql-rust-codegen"  # Update with your repo
repository = "https://github.com/michakfromparis/graphql-rust-codegen"  # Update with your repo
readme = "README.md"
keywords = ["graphql", "codegen", "orm", "diesel", "sea-orm"]
categories = ["development-tools", "command-line-utilities"]
license = "MIT"
exclude = [
    ".github/",
    "tests/",
    "*.md"
]

[dependencies]
# CLI
clap = { version = "4.4", features = ["derive"] }

# HTTP client
reqwest = { version = "0.11", features = ["json"] }
tokio = { version = "1.0", features = ["full"] }

# GraphQL parsing
graphql-parser = "0.4"

# Code generation
syn = { version = "2.0", features = ["full", "extra-traits"] }
quote = "1.0"
proc-macro2 = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
serde_yaml = { version = "0.9", optional = true }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# File system operations
fs-err = "2.9"

# UUID support (for GraphQL ID mapping)
uuid = { version = "1.0", features = ["v4", "serde"] }

# Date/time support for migrations
chrono = { version = "0.4", features = ["serde"] }

# Diesel (optional, for generation)
diesel = { version = "2.1", features = ["sqlite", "postgres", "uuid", "chrono"], optional = true }

# Sea-ORM (optional, for generation)
sea-orm = { version = "0.12", features = ["sqlx-sqlite", "sqlx-postgres", "runtime-tokio-rustls", "macros"], optional = true }

[dev-dependencies]
tempfile = "3.0"

[features]
default = []
diesel-support = ["diesel"]
sea-orm-support = ["sea-orm"]
yaml-codegen-config = ["serde_yaml"]
